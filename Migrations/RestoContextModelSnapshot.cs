// <auto-generated />
using System;
using Lab1_WebAPI_Db_Resto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab1_WebAPI_Db_Resto.Migrations
{
    [DbContext(typeof(RestoContext))]
    partial class RestoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("BookingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingNumber")
                        .IsUnique();

                    b.HasIndex("FK_CustomerId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfGuests = 4,
                            BookingNumber = "120240830",
                            FK_CustomerId = 2,
                            ReservationEnd = new DateTime(2024, 9, 2, 20, 12, 11, 650, DateTimeKind.Local).AddTicks(3619),
                            ReservationStart = new DateTime(2024, 9, 2, 18, 12, 11, 650, DateTimeKind.Local).AddTicks(3554),
                            TimeStamp = new DateTime(2024, 9, 2, 18, 12, 11, 650, DateTimeKind.Local).AddTicks(3624)
                        },
                        new
                        {
                            Id = 2,
                            AmountOfGuests = 6,
                            BookingNumber = "220240830",
                            FK_CustomerId = 2,
                            ReservationEnd = new DateTime(2024, 9, 2, 20, 12, 11, 650, DateTimeKind.Local).AddTicks(3634),
                            ReservationStart = new DateTime(2024, 9, 2, 18, 12, 11, 650, DateTimeKind.Local).AddTicks(3632),
                            TimeStamp = new DateTime(2024, 9, 2, 18, 12, 11, 650, DateTimeKind.Local).AddTicks(3636)
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "magda@m.m",
                            Name = "Magda",
                            PhoneNumber = "076"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jocke@j.j",
                            Name = "Joakim",
                            PhoneNumber = "070"
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Tofu"
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Garlic"
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = false,
                            Name = "Potato"
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Pasta"
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = false,
                            Name = "Chicken"
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Det är bara svampsås som saknas",
                            IsAvailable = false,
                            Name = "Tofu med kroppkakor",
                            Price = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nom nom tres bienos!",
                            IsAvailable = true,
                            Name = "Pasta aglio e olio",
                            Price = 89
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.MealCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MealCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Starter"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dessert"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Drinks non-alco"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Beer"
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.MealIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("MealIngredients");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountOfPlaces")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableNumber")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountOfPlaces = 4,
                            TableNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            AmountOfPlaces = 2,
                            TableNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            AmountOfPlaces = 4,
                            TableNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            AmountOfPlaces = 2,
                            TableNumber = 4
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.TableBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FK_BookingId")
                        .HasColumnType("int");

                    b.Property<int>("FK_TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FK_BookingId");

                    b.HasIndex("FK_TableId");

                    b.ToTable("TableBookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FK_BookingId = 1,
                            FK_TableId = 1
                        },
                        new
                        {
                            Id = 2,
                            FK_BookingId = 1,
                            FK_TableId = 2
                        },
                        new
                        {
                            Id = 3,
                            FK_BookingId = 2,
                            FK_TableId = 3
                        });
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Booking", b =>
                {
                    b.HasOne("Lab1_WebAPI_Db_Resto.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("FK_CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.MealIngredient", b =>
                {
                    b.HasOne("Lab1_WebAPI_Db_Resto.Models.Ingredient", null)
                        .WithMany("MealIngredient")
                        .HasForeignKey("IngredientId");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.TableBooking", b =>
                {
                    b.HasOne("Lab1_WebAPI_Db_Resto.Models.Booking", "Booking")
                        .WithMany("TableBookings")
                        .HasForeignKey("FK_BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab1_WebAPI_Db_Resto.Models.Table", "Table")
                        .WithMany("TableBooking")
                        .HasForeignKey("FK_TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Booking", b =>
                {
                    b.Navigation("TableBookings");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Ingredient", b =>
                {
                    b.Navigation("MealIngredient");
                });

            modelBuilder.Entity("Lab1_WebAPI_Db_Resto.Models.Table", b =>
                {
                    b.Navigation("TableBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
